version: '3.8'

services:
  client:
    build: ./client
    container_name: react_client
    ports:
      - "5174:5174"
    command: ["yarn", "dev", "--host"]
    volumes:
      - ./client:/app

  server:
    build: ./server
    container_name: django_server
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=server_conf.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/fbrain_db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./server:/app

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "3000:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  proxy:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
      - client

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" #interface admin
      - "5672:5672" #port pour la communication
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fbrain_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

valumes:
  postgres_data:
